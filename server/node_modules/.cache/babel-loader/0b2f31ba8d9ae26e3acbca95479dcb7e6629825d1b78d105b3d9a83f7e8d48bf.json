{"ast":null,"code":"const express = require('express');\nconst cookieParser = require('cookie-parser');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst PostRoute = require('./api/post');\nconst app = express();\napp.use(cookieParser());\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use('/post', PostRoute);\napp.get('/', (req, res) => {\n  res.send(\"get from the main page\");\n});\nconst mongoEndpoint = 'mongodb+srv://proj3:project3@webdevneu.ozpcdcj.mongodb.net/twitterApp?retryWrites=true&w=majority';\nmongoose.connect(mongoEndpoint, {\n  useNewUrlParser: true\n});\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'Error connecting to MongoDB:'));\napp.get('*', function (req, res) {\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\n});\napp.listen(8000, () => {\n  console.log(\"Starting server for project 3 ...\");\n});","map":{"version":3,"names":["express","require","cookieParser","mongoose","cors","PostRoute","app","use","json","urlencoded","extended","get","req","res","send","mongoEndpoint","connect","useNewUrlParser","db","connection","on","console","error","bind","sendFile","path","join","__dirname","listen","log"],"sources":["/Users/jiawenhe/Desktop/22 Fall/Proj3_CS5610/CS5610_Project3/server/server.js"],"sourcesContent":["const express = require('express')\nconst cookieParser = require('cookie-parser');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\n\nconst PostRoute = require('./api/post');\n\nconst app = express()\n\n\napp.use(cookieParser());\napp.use(cors());\napp.use(express.json());\napp.use(express.urlencoded({extended: true}));\n\napp.use('/post', PostRoute);\n\napp.get('/', (req, res) => {\n    res.send(\"get from the main page\")\n})\n\n\nconst mongoEndpoint = 'mongodb+srv://proj3:project3@webdevneu.ozpcdcj.mongodb.net/twitterApp?retryWrites=true&w=majority'; \nmongoose.connect(mongoEndpoint, { useNewUrlParser: true });\n\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'Error connecting to MongoDB:'));\n\napp.get('*', function (req, res) {\n\n    res.sendFile(path.join(__dirname, 'build', 'index.html'));\n\n});\n\napp.listen(8000, ()=>{\n    console.log(\"Starting server for project 3 ...\")\n})"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,YAAY,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMI,SAAS,GAAGJ,OAAO,CAAC,YAAY,CAAC;AAEvC,MAAMK,GAAG,GAAGN,OAAO,EAAE;AAGrBM,GAAG,CAACC,GAAG,CAACL,YAAY,EAAE,CAAC;AACvBI,GAAG,CAACC,GAAG,CAACH,IAAI,EAAE,CAAC;AACfE,GAAG,CAACC,GAAG,CAACP,OAAO,CAACQ,IAAI,EAAE,CAAC;AACvBF,GAAG,CAACC,GAAG,CAACP,OAAO,CAACS,UAAU,CAAC;EAACC,QAAQ,EAAE;AAAI,CAAC,CAAC,CAAC;AAE7CJ,GAAG,CAACC,GAAG,CAAC,OAAO,EAAEF,SAAS,CAAC;AAE3BC,GAAG,CAACK,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvBA,GAAG,CAACC,IAAI,CAAC,wBAAwB,CAAC;AACtC,CAAC,CAAC;AAGF,MAAMC,aAAa,GAAG,mGAAmG;AACzHZ,QAAQ,CAACa,OAAO,CAACD,aAAa,EAAE;EAAEE,eAAe,EAAE;AAAK,CAAC,CAAC;AAE1D,MAAMC,EAAE,GAAGf,QAAQ,CAACgB,UAAU;AAC9BD,EAAE,CAACE,EAAE,CAAC,OAAO,EAAEC,OAAO,CAACC,KAAK,CAACC,IAAI,CAACF,OAAO,EAAE,8BAA8B,CAAC,CAAC;AAE3Ef,GAAG,CAACK,GAAG,CAAC,GAAG,EAAE,UAAUC,GAAG,EAAEC,GAAG,EAAE;EAE7BA,GAAG,CAACW,QAAQ,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;AAE7D,CAAC,CAAC;AAEFrB,GAAG,CAACsB,MAAM,CAAC,IAAI,EAAE,MAAI;EACjBP,OAAO,CAACQ,GAAG,CAAC,mCAAmC,CAAC;AACpD,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}